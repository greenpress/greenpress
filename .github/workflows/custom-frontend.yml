name: Build and deploy blog-front custom image

## This pipeline will auto-deploy the main branch to your VM using docker-compose.
## It expects secret variables:
##    SSH_USERNAME - the ssh user to your VM
##    SSH_HOST - the host URL / IP
##    SSH_TOKEN - the private key token to access the VM
##    THEME - (optional) - the chosen theme for the blog-front build. default is: `damal`
## It also expects that the docker-compose yml will be under `~/compose` directory (It can also be an alias).

on:
  push:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      hasSecrets: ${{ steps.hasSecrets.outputs.hasSecrets }}
    steps:
      - id: hasSecrets
        run: echo '::set-output name=hasSecrets::${{ (secrets.SSH_USERNAME && secrets.SSH_HOST && secrets.SSH_TOKEN && 'true') || 'false' }}'
  deploy-to-ssh:
    runs-on: ubuntu-latest
    needs: [validate]
    if: ${{needs.validate.outputs.hasSecrets == 'true'}}
    steps:
      - uses: actions/checkout@v2
      - name: Login to github container registery
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u USERNAME --password-stdin
      - name: Build the monorepo main Docker image
        run: docker build -f Dockerfile.custom-blog-front -t ghcr.io/${{github.repository_owner}}/blog-front:${GITHUB_REF##*/} --build-arg THEME=${{secrets.THEME || 'damal'}} .
      - name: Push to registery
        run: docker push ghcr.io/${{github.repository_owner}}/blog-front:${GITHUB_REF##*/}
      - name: deploy to VM
        # You may pin to the exact commit or the version.
        # uses: kevin-leptons/ssh_action@f6a3f20fcc02928dbd96268bd206a5fd5917d868
        uses: kevin-leptons/ssh_action@v1
        with:
          # URI refers to remote host like `user@host`
          host: ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}
          # Private SSH key to authenticate
          key: ${{ secrets.SSH_TOKEN }}
          # Command to execute, Bash syntax
          command: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{github.repository_owner}} --password-stdin
            docker pull ghcr.io/${{github.repository_owner}}/blog-front:main
            cd compose
            docker rm -f $(docker ps -q --filter name=blog-front)
            docker-compose up -d --no-recreate
            exit
