# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1

executors:
  gp-machine:
    machine: true

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-base-monorepo:
    executor: gp-machine
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: Docker login
          command: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: Docker build
          command: docker build . -t greenpress/monorepo:$CIRCLE_BRANCH
      - run: docker push greenpress/monorepo:$CIRCLE_BRANCH
      - persist_to_workspace:
          root: .
          paths:
            - .
  build-apps:
    executor: gp-machine
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Docker login
          command: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run: |
          cd compose/builders
          docker build . -f admin.Dockerfile -t greenpress/admin-panel:$CIRCLE_BRANCH
          docker push greenpress/admin-panel:$CIRCLE_BRANCH
          localVersion=v$(docker run -it greenpress/admin-panel:$CIRCLE_BRANCH cat package.json | jq ."version" | tr -d "\"")
          dockerHubVersion=$(wget -q https://registry.hub.docker.com/v1/repositories/greenpress/admin-panel/tags -O -)  
          dockerVersion=$(echo $dockerHubVersion | sed -e 's/[][]//g' -e 's/"//g' -e 's/ //g' | tr '}' '\n'  | awk -F: '{print $3}'  | grep -x ${localVersion} || true)
          if [ -n "$dockerVersion" ]; then echo "version: ${localVersion} already exist in docker hub" else docker push greenpress/admin-panel:latest;fi
      - run: |
          cd compose/builders
          docker build . -f auth.Dockerfile -t greenpress/auth:$CIRCLE_BRANCH
          docker push greenpress/auth:$CIRCLE_BRANCH
          localVersion=v$(docker run -it greenpress/auth:$CIRCLE_BRANCH cat package.json | jq ."version" | tr -d "\"")
          dockerHubVersion=$(wget -q https://registry.hub.docker.com/v1/repositories/greenpress/auth/tags -O -)  
          dockerVersion=$(echo $dockerHubVersion | sed -e 's/[][]//g' -e 's/"//g' -e 's/ //g' | tr '}' '\n'  | awk -F: '{print $3}'  | grep -x ${localVersion} || true)
          if [ -n "$dockerVersion" ]; then echo "version: ${localVersion} already exist in docker hub" else docker push greenpress/auth:latest;fi
      - run: |
          cd compose/builders
          docker build . -f assets.Dockerfile -t greenpress/assets:$CIRCLE_BRANCH
          docker push greenpress/assets:$CIRCLE_BRANCH
          localVersion=v$(docker run -it greenpress/assets:$CIRCLE_BRANCH cat package.json | jq ."version" | tr -d "\"")
          dockerHubVersion=$(wget -q https://registry.hub.docker.com/v1/repositories/greenpress/assets/tags -O -)  
          dockerVersion=$(echo $dockerHubVersion | sed -e 's/[][]//g' -e 's/"//g' -e 's/ //g' | tr '}' '\n'  | awk -F: '{print $3}'  | grep -x ${localVersion} || true)
          if [ -n "$dockerVersion" ]; then echo "version: ${localVersion} already exist in docker hub" else docker push greenpress/assets:latest;fi
      - run: |
          cd compose/builders
          docker build . -f blog-front.Dockerfile -t greenpress/blog-front:$CIRCLE_BRANCH
          docker push greenpress/blog-front:$CIRCLE_BRANCH
          localVersion=v$(docker run -it greenpress/auth:$CIRCLE_BRANCH cat package.json | jq ."version" | tr -d "\"")
          dockerHubVersion=$(wget -q https://registry.hub.docker.com/v1/repositories/greenpress/blog-front/tags -O -)  
          dockerVersion=$(echo $dockerHubVersion | sed -e 's/[][]//g' -e 's/"//g' -e 's/ //g' | tr '}' '\n'  | awk -F: '{print $3}'  | grep -x ${localVersion} || true)
          if [ -n "$dockerVersion" ]; then echo "version: ${localVersion} already exist in docker hub" else docker push greenpress/blog-front:latest;fi
      - run: |
          cd compose/builders
          docker build . -f content.Dockerfile -t greenpress/content:$CIRCLE_BRANCH
          docker push greenpress/content:$CIRCLE_BRANCH
          localVersion=v$(docker run -it greenpress/content:$CIRCLE_BRANCH cat package.json | jq ."version" | tr -d "\"")
          dockerHubVersion=$(wget -q https://registry.hub.docker.com/v1/repositories/greenpress/content/tags -O -)  
          dockerVersion=$(echo $dockerHubVersion | sed -e 's/[][]//g' -e 's/"//g' -e 's/ //g' | tr '}' '\n'  | awk -F: '{print $3}'  | grep -x ${localVersion} || true)
          if [ -n "$dockerVersion" ]; then echo "version: ${localVersion} already exist in docker hub" else docker push greenpress/content:latest;fi
      - run: |
          cd compose/builders
          docker build . -f drafts.Dockerfile -t greenpress/drafts:$CIRCLE_BRANCH
          docker push greenpress/drafts:$CIRCLE_BRANCH
          localVersion=v$(docker run -it greenpress/drafts:$CIRCLE_BRANCH cat package.json | jq ."version" | tr -d "\"")
          dockerHubVersion=$(wget -q https://registry.hub.docker.com/v1/repositories/greenpress/drafts/tags -O -)  
          dockerVersion=$(echo $dockerHubVersion | sed -e 's/[][]//g' -e 's/"//g' -e 's/ //g' | tr '}' '\n'  | awk -F: '{print $3}'  | grep -x ${localVersion} || true)
          if [ -n "$dockerVersion" ]; then echo "version: ${localVersion} already exist in docker hub" else docker push greenpress/drafts:latest;fi
      - run: |
          cd compose/builders
          docker build . -f greenpress.Dockerfile -t greenpress/greenpress:$CIRCLE_BRANCH
          docker push greenpress/greenpress:$CIRCLE_BRANCH
          localVersion=v$(docker run -it greenpress/greenpress:$CIRCLE_BRANCH cat package.json | jq ."version" | tr -d "\"")
          dockerHubVersion=$(wget -q https://registry.hub.docker.com/v1/repositories/greenpress/greenpress/tags -O -)  
          dockerVersion=$(echo $dockerHubVersion | sed -e 's/[][]//g' -e 's/"//g' -e 's/ //g' | tr '}' '\n'  | awk -F: '{print $3}'  | grep -x ${localVersion} || true)
          if [ -n "$dockerVersion" ]; then echo "version: ${localVersion} already exist in docker hub" else docker push greenpress/greenpress:latest;fi
      - run: |
          cd compose/builders
          docker build . -f mailing.Dockerfile -t greenpress/mailing:$CIRCLE_BRANCH
          docker push greenpress/mailing:$CIRCLE_BRANCH
          localVersion=v$(docker run -it greenpress/mailing:$CIRCLE_BRANCH cat package.json | jq ."version" | tr -d "\"")
          dockerHubVersion=$(wget -q https://registry.hub.docker.com/v1/repositories/greenpress/mailing/tags -O -)  
          dockerVersion=$(echo $dockerHubVersion | sed -e 's/[][]//g' -e 's/"//g' -e 's/ //g' | tr '}' '\n'  | awk -F: '{print $3}'  | grep -x ${localVersion} || true)
          if [ -n "$dockerVersion" ]; then echo "version: ${localVersion} already exist in docker hub" else docker push greenpress/mailing:latest;fi
      - run: |
          cd compose/builders
          docker build . -f secrets.Dockerfile -t greenpress/secrets:$CIRCLE_BRANCH
          docker push greenpress/secrets:$CIRCLE_BRANCH
          localVersion=v$(docker run -it greenpress/secrets:$CIRCLE_BRANCH cat package.json | jq ."version" | tr -d "\"")
          dockerHubVersion=$(wget -q https://registry.hub.docker.com/v1/repositories/greenpress/secrets/tags -O -)  
          dockerVersion=$(echo $dockerHubVersion | sed -e 's/[][]//g' -e 's/"//g' -e 's/ //g' | tr '}' '\n'  | awk -F: '{print $3}'  | grep -x ${localVersion} || true)
          if [ -n "$dockerVersion" ]; then echo "version: ${localVersion} already exist in docker hub" else docker push greenpress/secrets:latest;fi
workflows:
  build-monorepo:
    jobs:
      -  build-base-monorepo:
           filters:
             branches:
               only: main
      -  build-apps:
           requires:
             - build-base-monorepo
           filters:
             branches:
               only: 
                - main
                - circleci-editor/main
