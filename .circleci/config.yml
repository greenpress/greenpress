# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1

executors:
  gp-machine:
    machine: true
  test-machine:
    machine: true

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-base-monorepo:
    executor: gp-machine
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: Docker login
          command: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: Replace slash to branch name
          command: echo "export BRANCH_NAME=$(echo $CIRCLE_BRANCH | sed 's,/,-,g')" >> $BASH_ENV
      - run:
          name: Print branch name
          command: echo $BRANCH_NAME
      - run:
          name: Docker build
          command: docker build . -t greenpress/monorepo:$BRANCH_NAME
      - run: docker push greenpress/monorepo:$BRANCH_NAME
      - persist_to_workspace:
          root: .
          paths:
            - .
  build-apps:
    executor: gp-machine
    steps:
      - attach_workspace:
          at: .
      - run:
            name: Replace slash to branch name
            command: echo "export BRANCH_NAME=$(echo $CIRCLE_BRANCH | sed 's,/,-,g')" >> $BASH_ENV
      - run:
          name: Docker login
          command: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run: |
          cd compose/builders
          docker build . -f admin.Dockerfile -t greenpress/admin-panel:$BRANCH_NAME --build-arg MONOREPO_VERSION=$BRANCH_NAME
          docker push greenpress/admin-panel:$BRANCH_NAME
          localVersion=v$(docker run -it greenpress/admin-panel:$BRANCH_NAME sed 's/.*"version": "\(.*\)".*/\1/;t;d' ./package.json)
          localVersion=$(echo ${localVersion} | tr -d "^@" | tr -d "\r")
          dockerHubVersion=$(wget -q -O- "https://index.docker.io/v1/repositories/greenpress/admin-panel/tags/${localVersion}" || true)
          if [ "$dockerHubVersion" = "[]"  ]; then
          echo "version: ${localVersion} already exist in docker hub";
          else docker tag greenpress/admin-panel:$BRANCH_NAME greenpress/admin-panel:latest
          docker push greenpress/admin-panel:latest
          docker tag greenpress/admin-panel:latest greenpress/admin-panel:${localVersion}
          docker push greenpress/admin-panel:${localVersion};
          fi
      - run: |
          cd compose/builders
          docker build . -f auth.Dockerfile -t greenpress/auth:$BRANCH_NAME --build-arg MONOREPO_VERSION=$BRANCH_NAME
          docker push greenpress/auth:$BRANCH_NAME
          localVersion=v$(docker run -it greenpress/auth:$BRANCH_NAME sed 's/.*"version": "\(.*\)".*/\1/;t;d' ./package.json)
          localVersion=$(echo ${localVersion} | tr -d "^@" | tr -d "\r")
          dockerHubVersion=$(wget -q -O- "https://index.docker.io/v1/repositories/greenpress/auth/tags/${localVersion}" || true)
          if [ "$dockerHubVersion" = "[]"  ]; then
          echo "version: ${localVersion} already exist in docker hub";
          else docker tag greenpress/auth:$BRANCH_NAME greenpress/auth:latest
          docker push greenpress/auth:latest
          docker tag greenpress/auth:latest greenpress/auth:${localVersion}
          docker push greenpress/auth:${localVersion};
          fi
      - run: |
          cd compose/builders
          docker build . -f assets.Dockerfile -t greenpress/assets:$BRANCH_NAME --build-arg MONOREPO_VERSION=$BRANCH_NAME
          docker push greenpress/assets:$BRANCH_NAME
          localVersion=v$(docker run -it greenpress/assets:$BRANCH_NAME sed 's/.*"version": "\(.*\)".*/\1/;t;d' ./package.json)
          localVersion=$(echo ${localVersion} | tr -d "^@" | tr -d "\r")
          dockerHubVersion=$(wget -q -O- "https://index.docker.io/v1/repositories/greenpress/assets/tags/${localVersion}" || true)
          if [ "$dockerHubVersion" = "[]"  ]; then
          echo "version: ${localVersion} already exist in docker hub";
          else docker tag greenpress/assets:$BRANCH_NAME greenpress/assets:latest
          docker push greenpress/assets:latest
          docker tag greenpress/assets:latest greenpress/assets:${localVersion}
          docker push greenpress/assets:${localVersion};
          fi
      - run: |
          cd compose/builders
          docker build . -f content.Dockerfile -t greenpress/content:$BRANCH_NAME --build-arg MONOREPO_VERSION=$BRANCH_NAME
          docker push greenpress/content:$BRANCH_NAME
          localVersion=v$(docker run -it greenpress/content:$BRANCH_NAME sed 's/.*"version": "\(.*\)".*/\1/;t;d' ./package.json)
          localVersion=$(echo ${localVersion} | tr -d "^@" | tr -d "\r")
          dockerHubVersion=$(wget -q -O- "https://index.docker.io/v1/repositories/greenpress/content/tags/${localVersion}" || true)
          if [ "$dockerHubVersion" = "[]"  ]; then
          echo "version: ${localVersion} already exist in docker hub";
          else docker tag greenpress/content:$BRANCH_NAME greenpress/content:latest
          docker push greenpress/content:latest
          docker tag greenpress/content:latest greenpress/content:${localVersion}
          docker push greenpress/content:${localVersion};
          fi
      - run: |
          cd compose/builders
          docker build . -f drafts.Dockerfile -t greenpress/drafts:$BRANCH_NAME --build-arg MONOREPO_VERSION=$BRANCH_NAME
          docker push greenpress/drafts:$BRANCH_NAME
          localVersion=v$(docker run -it greenpress/drafts:$BRANCH_NAME sed 's/.*"version": "\(.*\)".*/\1/;t;d' ./package.json)
          localVersion=$(echo ${localVersion} | tr -d "^@" | tr -d "\r")
          dockerHubVersion=$(wget -q -O- "https://index.docker.io/v1/repositories/greenpress/drafts/tags/${localVersion}" || true)
          if [ "$dockerHubVersion" = "[]"  ]; then
          echo "version: ${localVersion} already exist in docker hub";
          else docker tag greenpress/drafts:$BRANCH_NAME greenpress/drafts:latest
          docker push greenpress/drafts:latest
          docker tag greenpress/drafts:latest greenpress/drafts:${localVersion}
          docker push greenpress/drafts:${localVersion};
          fi
      - run: |
          cd compose/builders
          docker build . -f plugins.Dockerfile -t greenpress/plugins:$BRANCH_NAME --build-arg MONOREPO_VERSION=$BRANCH_NAME
          docker push greenpress/plugins:$BRANCH_NAME
          localVersion=v$(docker run -it greenpress/plugins:$BRANCH_NAME sed 's/.*"version": "\(.*\)".*/\1/;t;d' ./package.json)
          localVersion=$(echo ${localVersion} | tr -d "^@" | tr -d "\r")
          dockerHubVersion=$(wget -q -O- "https://index.docker.io/v1/repositories/greenpress/plugins/tags/${localVersion}" || true)
          if [ "$dockerHubVersion" = "[]"  ]; then
          echo "version: ${localVersion} already exist in docker hub";
          else docker tag greenpress/plugins:$BRANCH_NAME greenpress/plugins:latest
          docker push greenpress/plugins:latest
          docker tag greenpress/plugins:latest greenpress/plugins:${localVersion}
          docker push greenpress/plugins:${localVersion};
          fi
      - run: |
          cd compose/builders
          docker build . -f secrets.Dockerfile -t greenpress/secrets:$BRANCH_NAME --build-arg MONOREPO_VERSION=$BRANCH_NAME
          docker push greenpress/secrets:$BRANCH_NAME
          localVersion=v$(docker run -it greenpress/secrets:$BRANCH_NAME sed 's/.*"version": "\(.*\)".*/\1/;t;d' ./package.json)
          localVersion=$(echo ${localVersion} | tr -d "^@" | tr -d "\r")
          dockerHubVersion=$(wget -q -O- "https://index.docker.io/v1/repositories/greenpress/secrets/tags/${localVersion}" || true)
          if [ "$dockerHubVersion" = "[]"  ]; then
          echo "version: ${localVersion} already exist in docker hub";
          else docker tag greenpress/secrets:$BRANCH_NAME greenpress/secrets:latest
          docker push greenpress/secrets:latest
          docker tag greenpress/secrets:latest greenpress/secrets:${localVersion}
          docker push greenpress/secrets:${localVersion};
          fi
      - run: |
          cd compose/builders
          docker build . -f gateway.Dockerfile -t greenpress/gateway:$BRANCH_NAME --build-arg MONOREPO_VERSION=$BRANCH_NAME
          docker push greenpress/gateway:$BRANCH_NAME
          localVersion=v$(docker run -it greenpress/gateway:$BRANCH_NAME sed 's/.*"version": "\(.*\)".*/\1/;t;d' ./package.json)
          localVersion=$(echo ${localVersion} | tr -d "^@" | tr -d "\r")
          dockerHubVersion=$(wget -q -O- "https://index.docker.io/v1/repositories/greenpress/gateway/tags/${localVersion}" || true)
          if [ "$dockerHubVersion" = "[]"  ]; then
          echo "version: ${localVersion} already exist in docker hub";
          else docker tag greenpress/gateway:$BRANCH_NAME greenpress/gateway:latest
          docker push greenpress/gateway:latest
          docker tag greenpress/gateway:latest greenpress/gateway:${localVersion}
          docker push greenpress/gateway:${localVersion};
          fi
      - run: |
          cd compose/builders
          docker build . -f front-ssr.Dockerfile -t greenpress/front-ssr:$BRANCH_NAME --build-arg MONOREPO_VERSION=$BRANCH_NAME
          docker push greenpress/front-ssr:$BRANCH_NAME
          localVersion=v$(docker run -it greenpress/front-ssr:$BRANCH_NAME sed 's/.*"version": "\(.*\)".*/\1/;t;d' ./package.json)
          localVersion=$(echo ${localVersion} | tr -d "^@" | tr -d "\r")
          dockerHubVersion=$(wget -q -O- "https://index.docker.io/v1/repositories/greenpress/front-ssr/tags/${localVersion}" || true)
          if [ "$dockerHubVersion" = "[]"  ]; then
          echo "version: ${localVersion} already exist in docker hub";
          else docker tag greenpress/front-ssr:$BRANCH_NAME greenpress/front-ssr:latest
          docker push greenpress/front-ssr:latest
          docker tag greenpress/front-ssr:latest greenpress/front-ssr:${localVersion}
          docker push greenpress/front-ssr:${localVersion};
          fi
  test:
    executor: test-machine
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: Print branch name
          command: echo $CIRCLE_BRANCH
      - run:
          name: Run test using Docker
          command: docker build . -f Dockerfile.test
workflows:
  build-monorepo:
    jobs:
      -  build-base-monorepo:
           filters:
             branches:
               only:
                 - main
                 - dev
      -  build-apps:
           requires:
             - build-base-monorepo
           filters:
             branches:
               only:
                 - main
                 - dev
  test-all:
    jobs:
      -  test
